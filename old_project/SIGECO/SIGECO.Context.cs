//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SIGECO
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SIGECO_Entities : DbContext
    {
        public SIGECO_Entities()
            : base("name=SIGECO_Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<OdontogramaDetalle> OdontogramaDetalle { get; set; }
        public virtual DbSet<Simbolo> Simbolo { get; set; }
        public virtual DbSet<vwOdontogramaDetalle> vwOdontogramaDetalle { get; set; }
        public virtual DbSet<vwSimbolosIncompatibles> vwSimbolosIncompatibles { get; set; }
        public virtual DbSet<vwDientesIncompatibles> vwDientesIncompatibles { get; set; }
        public virtual DbSet<vwUsuario> vwUsuario { get; set; }
        public virtual DbSet<Menu> Menu { get; set; }
        public virtual DbSet<TableColumns> TableColumns { get; set; }
    
        public virtual ObjectResult<spGetSimbolos_Result> spGetSimbolos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spGetSimbolos_Result>("spGetSimbolos");
        }
    
        public virtual ObjectResult<spListarCatalogoPorCampoFK_Result> spListarCatalogoPorCampoFK(string sSelectName, string sFormName)
        {
            var sSelectNameParameter = sSelectName != null ?
                new ObjectParameter("sSelectName", sSelectName) :
                new ObjectParameter("sSelectName", typeof(string));
    
            var sFormNameParameter = sFormName != null ?
                new ObjectParameter("sFormName", sFormName) :
                new ObjectParameter("sFormName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spListarCatalogoPorCampoFK_Result>("spListarCatalogoPorCampoFK", sSelectNameParameter, sFormNameParameter);
        }
    
        public virtual ObjectResult<string> spGetXMLRowsByTableName(string sSchemaName, string sTableName)
        {
            var sSchemaNameParameter = sSchemaName != null ?
                new ObjectParameter("sSchemaName", sSchemaName) :
                new ObjectParameter("sSchemaName", typeof(string));
    
            var sTableNameParameter = sTableName != null ?
                new ObjectParameter("sTableName", sTableName) :
                new ObjectParameter("sTableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("spGetXMLRowsByTableName", sSchemaNameParameter, sTableNameParameter);
        }
    }
}
