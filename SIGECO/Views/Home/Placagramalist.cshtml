@{

	// Layout
	Layout = "_Layout";

	// View
	View = this;
	SetupLoginStatus(); // Setup login status
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	Placagrama_List.Page_Render();

	// Check action result
	if (Placagrama_List.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	#pragma warning disable 168

	// Local variables (Temp data)
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;
	string sqlWrk, filterWrk, whereWrk, curVal;

	#pragma warning restore 168

}
@if (!Placagrama.IsExport()) {
<script>

// Form object
var CurrentPageID = ew.PAGE_ID = "list";
var fPlacagramalist = currentForm = new ew.Form("fPlacagramalist", "list");
fPlacagramalist.formKeyCountName = "@Placagrama_List.FormKeyCountName";

// Form_CustomValidate event
fPlacagramalist.Form_CustomValidate = function(fobj) { // DO NOT CHANGE THIS LINE!

	// Your custom validation code here, return false if invalid.
	return true;
}

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fPlacagramalist.validateRequired = @ConvertToJson(Config.ClientValidate);

// Dynamic selection lists
fPlacagramalist.lists["x_nExpedienteID"] = @Html.Raw(Placagrama_List.nExpedienteID.Lookup.ToClientList());
fPlacagramalist.lists["x_nExpedienteID"].options = @Html.Raw(ConvertToJson(Placagrama_List.nExpedienteID.LookupOptions()));
fPlacagramalist.lists["x_nEstadoID"] = @Html.Raw(Placagrama_List.nEstadoID.Lookup.ToClientList());
fPlacagramalist.lists["x_nEstadoID"].options = @Html.Raw(ConvertToJson(Placagrama_List.nEstadoID.LookupOptions()));

// Form object for search
var fPlacagramalistsrch = currentSearchForm = new ew.Form("fPlacagramalistsrch");

// Filters
fPlacagramalistsrch.filterList = @Html.Raw(await Placagrama_List.GetFilterList());
</script>
<script>

// Write your client script here, no need to add script tags.
</script>
}
@if (!Placagrama.IsExport()) {
<div class="btn-toolbar ew-toolbar">
@if (Placagrama_List.TotalRecords > 0 && Placagrama_List.ExportOptions.Visible) {
	Placagrama_List.ExportOptions.Render("body");
}
@if (Placagrama_List.ImportOptions.Visible) {
	Placagrama_List.ImportOptions.Render("body");
}
@if (Placagrama_List.SearchOptions.Visible) {
	Placagrama_List.SearchOptions.Render("body");
}
@if (Placagrama_List.FilterOptions.Visible) {
	Placagrama_List.FilterOptions.Render("body");
}
<div class="clearfix"></div>
</div>
}
@{ Placagrama_List.RenderOtherOptions(); }
@if (Security.CanSearch) {
if (!Placagrama_List.IsExport() && Empty(Placagrama_List.CurrentAction)) { // Begin search form
<form name="fPlacagramalistsrch" id="fPlacagramalistsrch" class="form-inline ew-form ew-ext-search-form" action="@AppPath(CurrentPageName())">
<div id="fPlacagramalistsrch-search-panel" class="ew-search-panel collapse@(!Empty(Placagrama_List.SearchWhere) ? " show" : " show")">
<input type="hidden" name="cmd" value="search">
<div class="ew-basic-search">
<div id="xsr_1" class="ew-row d-sm-flex">
	<div class="ew-quick-search input-group">
	<input type="text" name="@Config.TableBasicSearch" id="@Config.TableBasicSearch" class="form-control" value="@Placagrama_List.BasicSearch.SessionKeyword" placeholder="@Language.Phrase("Search")">
	<input type="hidden" name="@Config.TableBasicSearchType" id="@Config.TableBasicSearchType" value="@Placagrama_List.BasicSearch.SessionType">
	<div class="input-group-append">
		<button class="btn btn-primary" name="btn-submit" id="btn-submit" type="submit">@Html.Raw(Language.Phrase("SearchBtn"))</button>
		<button type="button" data-toggle="dropdown" class="btn btn-primary dropdown-toggle dropdown-toggle-split" aria-haspopup="true" aria-expanded="false"><span id="searchtype">@Html.Raw(Placagrama_List.BasicSearch.TypeNameShort)</span></button>
		<div class="dropdown-menu dropdown-menu-right">
			<a class="dropdown-item @((Placagrama_List.BasicSearch.SessionType == "") ? " active" : "")" href="javascript:void(0);" onclick="ew.setSearchType(this)">@Html.Raw(Language.Phrase("QuickSearchAuto"))</a>
			<a class="dropdown-item @((Placagrama_List.BasicSearch.SessionType == "=") ? "active" : "")" href="javascript:void(0);" onclick="ew.setSearchType(this,'=')">@Html.Raw(Language.Phrase("QuickSearchExact"))</a>
			<a class="dropdown-item @((Placagrama_List.BasicSearch.SessionType == "AND") ? "active" : "")" href="javascript:void(0);" onclick="ew.setSearchType(this,'AND')">@Html.Raw(Language.Phrase("QuickSearchAll"))</a>
			<a class="dropdown-item @((Placagrama_List.BasicSearch.SessionType == "OR") ? "active" : "")" href="javascript:void(0);" onclick="ew.setSearchType(this,'OR')">@Html.Raw(Language.Phrase("QuickSearchAny"))</a>
		</div>
	</div>
	</div>
</div>
</div>
</div>
</form>
} @* End search form *@
}
@Placagrama_List.ShowPageHeader()
@Placagrama_List.ShowMessages()
@if (Placagrama_List.TotalRecords > 0 || Placagrama_List.CurrentAction != "") {
<div class="card ew-card ew-grid@(Placagrama_List.IsAddOrEdit ? " ew-grid-add-edit" : "") Placagrama">
<form name="fPlacagramalist" id="fPlacagramalist" class="form-inline ew-form ew-list-form" action="@AppPath(CurrentPageName())" method="post">
@if (Placagrama_List.CheckToken) {
	@Html.AntiForgeryToken()
}
<div id="gmp_Placagrama" class="@(IsResponsiveLayout() ? "table-responsive " : "")card-body ew-grid-middle-panel">
@if (Placagrama_List.TotalRecords > 0 || Placagrama.IsGridEdit) { // Begin If TotalRecords > 0
<table id="tbl_Placagramalist" class="table ew-table"><!-- .ew-table -->
<thead>
    <tr class="ew-table-header">
        @{

            // Header row
            Placagrama_List.RowType = Config.RowTypeHeader;

            // Render list options
            await Placagrama_List.RenderListOptions();

            // Render list options (header, left)
            Placagrama_List.ListOptions.Render("header", "left");
        }
        @if (Placagrama.nExpedienteID.Visible)
        { // nExpedienteID.Visible (begin)
            if (Placagrama_List.SortUrl(Placagrama.nExpedienteID) == "")
            {
                <th data-name="nExpedienteID" class="@Placagrama.nExpedienteID.HeaderCellClass"><div id="elh_Placagrama_nExpedienteID" class="Placagrama_nExpedienteID"><div class="ew-table-header-caption">@Html.Raw(Placagrama.nExpedienteID.Caption)</div></div></th>
            }
            else
            {
                <th data-name="nExpedienteID" class="@Placagrama.nExpedienteID.HeaderCellClass">
                    <div class="ew-pointer" onclick="ew.sort(event,'@Html.Raw(Placagrama.SortUrl(Placagrama.nExpedienteID))',1);">
                        <div id="elh_Placagrama_nExpedienteID" class="Placagrama_nExpedienteID">
                            <div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(Placagrama.nExpedienteID.Caption)</span><span class="ew-table-header-sort">@if (Placagrama.nExpedienteID.Sort == "ASC")
                            {<i class="fa fa-sort-up"></i>}
                            else if (Placagrama.nExpedienteID.Sort == "DESC")
                            {<i class="fa fa-sort-down"></i>}</span></div>
                        </div>
                    </div>
                </th>
            }
        } @* nExpedienteID.Visible (end) *@
        @if (Placagrama.sObservaciones.Visible)
        { // sObservaciones.Visible (begin)
            if (Placagrama_List.SortUrl(Placagrama.sObservaciones) == "")
            {
                <th data-name="sObservaciones" class="@Placagrama.sObservaciones.HeaderCellClass"><div id="elh_Placagrama_sObservaciones" class="Placagrama_sObservaciones"><div class="ew-table-header-caption">@Html.Raw(Placagrama.sObservaciones.Caption)</div></div></th>
            }
            else
            {
                <th data-name="sObservaciones" class="@Placagrama.sObservaciones.HeaderCellClass">
                    <div class="ew-pointer" onclick="ew.sort(event,'@Html.Raw(Placagrama.SortUrl(Placagrama.sObservaciones))',1);">
                        <div id="elh_Placagrama_sObservaciones" class="Placagrama_sObservaciones">
                            <div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(Placagrama.sObservaciones.Caption)@Html.Raw(Language.Phrase("SrchLegend"))</span><span class="ew-table-header-sort">@if (Placagrama.sObservaciones.Sort == "ASC")
                            {<i class="fa fa-sort-up"></i>}
                            else if (Placagrama.sObservaciones.Sort == "DESC")
                            {<i class="fa fa-sort-down"></i>}</span></div>
                        </div>
                    </div>
                </th>
            }
        } @* sObservaciones.Visible (end) *@
        @if (Placagrama.dFechaPlacagrama.Visible)
        { // dFechaPlacagrama.Visible (begin)
            if (Placagrama_List.SortUrl(Placagrama.dFechaPlacagrama) == "")
            {
                <th data-name="dFechaPlacagrama" class="@Placagrama.dFechaPlacagrama.HeaderCellClass"><div id="elh_Placagrama_dFechaPlacagrama" class="Placagrama_dFechaPlacagrama"><div class="ew-table-header-caption">@Html.Raw(Placagrama.dFechaPlacagrama.Caption)</div></div></th>
            }
            else
            {
                <th data-name="dFechaPlacagrama" class="@Placagrama.dFechaPlacagrama.HeaderCellClass">
                    <div class="ew-pointer" onclick="ew.sort(event,'@Html.Raw(Placagrama.SortUrl(Placagrama.dFechaPlacagrama))',1);">
                        <div id="elh_Placagrama_dFechaPlacagrama" class="Placagrama_dFechaPlacagrama">
                            <div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(Placagrama.dFechaPlacagrama.Caption)</span><span class="ew-table-header-sort">@if (Placagrama.dFechaPlacagrama.Sort == "ASC")
                            {<i class="fa fa-sort-up"></i>}
                            else if (Placagrama.dFechaPlacagrama.Sort == "DESC")
                            {<i class="fa fa-sort-down"></i>}</span></div>
                        </div>
                    </div>
                </th>
            }
        } @* dFechaPlacagrama.Visible (end) *@
        @if (Placagrama.nEstadoID.Visible)
        { // nEstadoID.Visible (begin)
            if (Placagrama_List.SortUrl(Placagrama.nEstadoID) == "")
            {
                <th data-name="nEstadoID" class="@Placagrama.nEstadoID.HeaderCellClass"><div id="elh_Placagrama_nEstadoID" class="Placagrama_nEstadoID"><div class="ew-table-header-caption">@Html.Raw(Placagrama.nEstadoID.Caption)</div></div></th>
            }
            else
            {
                <th data-name="nEstadoID" class="@Placagrama.nEstadoID.HeaderCellClass">
                    <div class="ew-pointer" onclick="ew.sort(event,'@Html.Raw(Placagrama.SortUrl(Placagrama.nEstadoID))',1);">
                        <div id="elh_Placagrama_nEstadoID" class="Placagrama_nEstadoID">
                            <div class="ew-table-header-btn"><span class="ew-table-header-caption">@Html.Raw(Placagrama.nEstadoID.Caption)</span><span class="ew-table-header-sort">@if (Placagrama.nEstadoID.Sort == "ASC")
                            {<i class="fa fa-sort-up"></i>}
                            else if (Placagrama.nEstadoID.Sort == "DESC")
                            {<i class="fa fa-sort-down"></i>}</span></div>
                        </div>
                    </div>
                </th>
            }
        } @* nEstadoID.Visible (end) *@

        <th class="@Placagrama.nEstadoID.HeaderCellClass"><div id="elh_Placagrama_cDetailButton" class="Placagrama_cDetailButton"><div class="ew-table-header-caption">Detalle</div></div></th>


        @{

            // Render list options (header, right)
            Placagrama_List.ListOptions.Render("header", "right");
        }
    </tr>
</thead>
<tbody>
@{ // Begin Code
if (Placagrama_List.ExportAll && Placagrama_List.IsExport()) {
	Placagrama_List.StopRecord = Placagrama_List.TotalRecords;
} else {

	// Set the last record to display
	if (Placagrama_List.TotalRecords > Placagrama_List.StartRecord + Placagrama_List.DisplayRecords - 1) {
		Placagrama_List.StopRecord = Placagrama_List.StartRecord + Placagrama_List.DisplayRecords - 1;
	} else {
		Placagrama_List.StopRecord = Placagrama_List.TotalRecords;
	}
}
if (Placagrama_List.Recordset != null && Placagrama_List.Recordset.HasRows) {
	if (!Placagrama_List.Connection.SelectOffset) { // DN
		for (var i = 1; i <= Placagrama_List.StartRecord - 1; i++) { // Move to first record
			if (await Placagrama_List.Recordset.ReadAsync()) {
				Placagrama_List.RecordCount++;
			}
		}
	} else {
		Placagrama_List.RecordCount = Placagrama_List.StartRecord - 1;
	}
} else if (!Placagrama_List.AllowAddDeleteRow && Placagrama_List.StopRecord == 0) {
	Placagrama_List.StopRecord = Placagrama_List.GridAddRowCount;
}

// Initialize aggregate
Placagrama_List.RowType = Config.RowTypeAggregateInit;
Placagrama_List.ResetAttributes();
await Placagrama_List.RenderRow();

// Output data rows
bool eof = (Placagrama_List.Recordset == null); // DN
while (Placagrama_List.RecordCount < Placagrama_List.StopRecord) { // Begin While
	if (!Placagrama_List.IsGridAdd && !eof) { // DN
		eof = !await Placagrama_List.Recordset.ReadAsync();
	}
	Placagrama_List.RecordCount++;
	if (Placagrama_List.RecordCount >= Placagrama_List.StartRecord) {
		Placagrama_List.RowCnt++;

		// Set up key count
		Placagrama_List.KeyCount = ConvertToInt(Placagrama_List.RowIndex);

		// Init row class and style
		Placagrama_List.ResetAttributes();
		Placagrama_List.CssClass = "";
		if (Placagrama_List.IsGridAdd) {
		} else {
			await Placagrama_List.LoadRowValues(Placagrama_List.Recordset); // Load row values
		}
		Placagrama_List.RowType = Config.RowTypeView; // Render view

		// Set up row id / data-rowindex
		Placagrama_List.RowAttrs.Add("data-rowindex", Convert.ToString(Placagrama_List.RowCnt));
		Placagrama_List.RowAttrs.Add("id", "r" + Convert.ToString(Placagrama_List.RowCnt) + "_Placagrama");
		Placagrama_List.RowAttrs.Add("data-rowtype", Convert.ToString(Placagrama_List.RowType));

		// Render row
		await Placagrama_List.RenderRow();

		// Render list options
		await Placagrama_List.RenderListOptions();
    <tr @Html.Raw(Placagrama_List.RowAttributes)>
        @{

            // Render list options (body, left)
            Placagrama_List.ListOptions.Render("body", "left", Placagrama_List.RowCnt);
        }
        @if (Placagrama.nExpedienteID.Visible)
        { // nExpedienteID.Visible (begin)
            <td data-name="nExpedienteID" @Html.Raw(Placagrama.nExpedienteID.CellAttributes)>
                <span id="el@(Placagrama_List.RowCnt)_Placagrama_nExpedienteID" class="Placagrama_nExpedienteID">
                    <span @Html.Raw(Placagrama.nExpedienteID.ViewAttributes)>
                        @Html.Raw(Placagrama.nExpedienteID.GetViewValue())
                    </span>
                </span>
            </td>
        } @* nExpedienteID.Visible (end) *@
        @if (Placagrama.sObservaciones.Visible)
        { // sObservaciones.Visible (begin)
            <td data-name="sObservaciones" @Html.Raw(Placagrama.sObservaciones.CellAttributes)>
                <span id="el@(Placagrama_List.RowCnt)_Placagrama_sObservaciones" class="Placagrama_sObservaciones">
                    <span @Html.Raw(Placagrama.sObservaciones.ViewAttributes)>
                        @Html.Raw(Placagrama.sObservaciones.GetViewValue())
                    </span>
                </span>
            </td>
        } @* sObservaciones.Visible (end) *@
        @if (Placagrama.dFechaPlacagrama.Visible)
        { // dFechaPlacagrama.Visible (begin)
            <td data-name="dFechaPlacagrama" @Html.Raw(Placagrama.dFechaPlacagrama.CellAttributes)>
                <span id="el@(Placagrama_List.RowCnt)_Placagrama_dFechaPlacagrama" class="Placagrama_dFechaPlacagrama">
                    <span @Html.Raw(Placagrama.dFechaPlacagrama.ViewAttributes)>
                        @Html.Raw(Placagrama.dFechaPlacagrama.GetViewValue())
                    </span>
                </span>
            </td>
        } @* dFechaPlacagrama.Visible (end) *@
        @if (Placagrama.nEstadoID.Visible)
        { // nEstadoID.Visible (begin)
            <td data-name="nEstadoID" @Html.Raw(Placagrama.nEstadoID.CellAttributes)>
                <span id="el@(Placagrama_List.RowCnt)_Placagrama_nEstadoID" class="Placagrama_nEstadoID">
                    <span @Html.Raw(Placagrama.nEstadoID.ViewAttributes)>
                        @Html.Raw(Placagrama.nEstadoID.GetViewValue())
                    </span>
                </span>
            </td>
        } @* nEstadoID.Visible (end) *@
        @{

            // Render list options (body, right)
            Placagrama_List.ListOptions.Render("body", "right", Placagrama_List.RowCnt);
        }
        <td @Html.Raw(Placagrama.nEstadoID.CellAttributes)>
            <a id="el@(Placagrama_List.RowCnt)_Odontograma_cDetailButton" href="/PlacagramaDetalle/List/@Html.Raw(Placagrama.nPlacagramaID.DbValue)" target="_blank" class="btn btn-default ew-row-link ew-detail">
                Editar Detalle
            </a>
        </td>
    </tr>
	} @* End if *@
} @* End While *@
} @* End Code *@
</tbody>
</table><!-- /.ew-table -->
} @* End If TotalRecords > 0 *@
@if (Empty(Placagrama_List.CurrentAction)) {
<input type="hidden" name="action" id="action" value="">
}
</div><!-- /.ew-grid-middle-panel -->
</form><!-- /.ew-list-form -->
@{ Placagrama_List.CloseRecordset(); }
		@if (!Placagrama.IsExport()) {
		<div class="card-footer ew-grid-lower-panel">
		@if (!Placagrama_List.IsGridAdd) {
			<form name="ew-pager-form" class="form-inline ew-form ew-pager-form" action="@AppPath(CurrentPageName())">
@{ Placagrama_List.Pager = Placagrama_List.Pager ?? new PrevNextPager(Placagrama_List.StartRecord, Placagrama_List.DisplayRecords, Placagrama_List.TotalRecords, Placagrama_List.AutoHidePager); }
@if (Placagrama_List.Pager.RecordCount > 0 && Placagrama_List.Pager.Visible) {
<div class="ew-pager">
<span>@Html.Raw(Language.Phrase("Page"))&nbsp;</span>
<div class="ew-prev-next"><div class="input-group input-group-sm">
<div class="input-group-prepend">
<!--first page button-->
	@if (Placagrama_List.Pager.FirstButton.Enabled) {
	<a class="btn btn-default" title="@Language.Phrase("PagerFirst")" href="@AppPath(Placagrama_List.PageUrl)start=@Placagrama_List.Pager.FirstButton.Start"><i class="icon-first ew-icon"></i></a>
	} else {
	<a class="btn btn-default disabled" title="@Language.Phrase("PagerFirst")"><i class="icon-first ew-icon"></i></a>
	}
<!--previous page button-->
	@if (Placagrama_List.Pager.PrevButton.Enabled) {
	<a class="btn btn-default" title="@Language.Phrase("PagerPrevious")" href="@AppPath(Placagrama_List.PageUrl)start=@Placagrama_List.Pager.PrevButton.Start"><i class="icon-prev ew-icon"></i></a>
	} else {
	<a class="btn btn-default disabled" title="@Language.Phrase("PagerPrevious")"><i class="icon-prev ew-icon"></i></a>
	}
</div>
<!--current page number-->
	<input class="form-control" type="text" name="@Config.TablePageNumber" value="@Placagrama_List.Pager.CurrentPageNumber">
<div class="input-group-append">
<!--next page button-->
	@if (Placagrama_List.Pager.NextButton.Enabled) {
	<a class="btn btn-default" title="@Language.Phrase("PagerNext")" href="@AppPath(Placagrama_List.PageUrl)start=@Placagrama_List.Pager.NextButton.Start"><i class="icon-next ew-icon"></i></a>
	} else {
	<a class="btn btn-default disabled" title="@Language.Phrase("PagerNext")"><i class="icon-next ew-icon"></i></a>
	}
<!--last page button-->
	@if (Placagrama_List.Pager.LastButton.Enabled) {
	<a class="btn btn-default" title="@Language.Phrase("PagerLast")" href="@AppPath(Placagrama_List.PageUrl)start=@Placagrama_List.Pager.LastButton.Start"><i class="icon-last ew-icon"></i></a>
	} else {
	<a class="btn btn-default disabled" title="@Language.Phrase("PagerLast")"><i class="icon-last ew-icon"></i></a>
	}
</div>
</div>
</div>
<span>&nbsp;@Html.Raw(Language.Phrase("Of"))&nbsp;@Placagrama_List.Pager.PageCount</span>
<div class="clearfix"></div>
</div>
}
@if (Placagrama_List.Pager.RecordCount > 0) {
	<div class="ew-pager ew-rec">
		<span>@Html.Raw(Language.Phrase("Record"))&nbsp;@(Placagrama_List.Pager.FromIndex)&nbsp;@Html.Raw(Language.Phrase("To"))&nbsp;@(Placagrama_List.Pager.ToIndex)&nbsp;@Html.Raw(Language.Phrase("Of"))&nbsp;@(Placagrama_List.Pager.RecordCount)</span>
	</div>
}
			</form>
		}
		<div class="ew-list-other-options">
		@Placagrama_List.OtherOptions.RenderBody("bottom")
		</div>
		<div class="clearfix"></div>
		</div>
		}
</div><!-- /.ew-grid -->
}
@if (Placagrama_List.TotalRecords <= 0 && Placagrama_List.CurrentAction == "") { // Show other options
<div class="ew-list-other-options">
@Placagrama_List.OtherOptions.ForEach(opt => opt.ButtonClass = "").RenderBody()
</div>
<div class="clearfix"></div>
}
@Placagrama_List.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!Placagrama.IsExport()) {
<script>

// Write your table-specific startup script here
// document.write("page loaded");

</script>
}
