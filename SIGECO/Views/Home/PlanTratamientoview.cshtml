@{

	// Layout
	Layout = "_Layout";

	// View
	View = this;
	SetupLoginStatus(); // Setup login status
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	PlanTratamiento_View.Page_Render();

	// Check action result
	if (PlanTratamiento_View.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	#pragma warning disable 168

	// Local variables (Temp data)
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;

	#pragma warning restore 168

}
@if (!PlanTratamiento.IsExport()) {
<script>

// Form object
var CurrentPageID = ew.PAGE_ID = "view";
var fPlanTratamientoview = currentForm = new ew.Form("fPlanTratamientoview", "view");

// Form_CustomValidate event
fPlanTratamientoview.Form_CustomValidate = function(fobj) { // DO NOT CHANGE THIS LINE!

	// Your custom validation code here, return false if invalid.
	return true;
}

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fPlanTratamientoview.validateRequired = @ConvertToJson(Config.ClientValidate);

// Dynamic selection lists
fPlanTratamientoview.lists["x_nExpedienteID"] = @Html.Raw(PlanTratamiento_View.nExpedienteID.Lookup.ToClientList());
fPlanTratamientoview.lists["x_nExpedienteID"].options = @Html.Raw(ConvertToJson(PlanTratamiento_View.nExpedienteID.LookupOptions));
fPlanTratamientoview.autoSuggests["x_nExpedienteID"] = @Html.Raw(ConvertToJson(new Dictionary<string, string> { {"data", "ajax=autosuggest"} }));

// Form object for search
</script>
<script>

// Write your client script here, no need to add script tags.
</script>
}
@if (!PlanTratamiento.IsExport()) {
<div class="btn-toolbar ew-toolbar">
	@PlanTratamiento_View.ExportOptions.RenderBody()
	@PlanTratamiento_View.OtherOptions.RenderBody()
	<div class="clearfix"></div>
</div>
}
@PlanTratamiento_View.ShowPageHeader()
@PlanTratamiento_View.ShowMessages()
<form name="fPlanTratamientoview" id="fPlanTratamientoview" class="form-inline ew-form ew-view-form" method="post">
@if (PlanTratamiento_View.CheckToken) {
	@Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(PlanTratamiento_View.IsModal)">
<table class="table table-striped table-sm ew-view-table">
@if (PlanTratamiento.nExpedienteID.Visible) { @* PlanTratamiento.nExpedienteID.Visible (begin) *@
	<tr id="r_nExpedienteID">
		<td class="@PlanTratamiento_View.TableLeftColumnClass"><span id="elh_PlanTratamiento_nExpedienteID">@Html.Raw(PlanTratamiento.nExpedienteID.Caption)</span></td>
		<td data-name="nExpedienteID" @Html.Raw(PlanTratamiento.nExpedienteID.CellAttributes)>
<span id="el_PlanTratamiento_nExpedienteID">
<span @Html.Raw(PlanTratamiento.nExpedienteID.ViewAttributes)>
@Html.Raw(PlanTratamiento.nExpedienteID.GetViewValue())</span>
</span>
</td>
	</tr>
} @* PlanTratamiento.nExpedienteID.Visible (end) *@
@if (PlanTratamiento.dFechaAsignacion.Visible) { @* PlanTratamiento.dFechaAsignacion.Visible (begin) *@
	<tr id="r_dFechaAsignacion">
		<td class="@PlanTratamiento_View.TableLeftColumnClass"><span id="elh_PlanTratamiento_dFechaAsignacion">@Html.Raw(PlanTratamiento.dFechaAsignacion.Caption)</span></td>
		<td data-name="dFechaAsignacion" @Html.Raw(PlanTratamiento.dFechaAsignacion.CellAttributes)>
<span id="el_PlanTratamiento_dFechaAsignacion">
<span @Html.Raw(PlanTratamiento.dFechaAsignacion.ViewAttributes)>
@Html.Raw(PlanTratamiento.dFechaAsignacion.GetViewValue())</span>
</span>
</td>
	</tr>
} @* PlanTratamiento.dFechaAsignacion.Visible (end) *@
@if (PlanTratamiento.sObservaciones.Visible) { @* PlanTratamiento.sObservaciones.Visible (begin) *@
	<tr id="r_sObservaciones">
		<td class="@PlanTratamiento_View.TableLeftColumnClass"><span id="elh_PlanTratamiento_sObservaciones">@Html.Raw(PlanTratamiento.sObservaciones.Caption)</span></td>
		<td data-name="sObservaciones" @Html.Raw(PlanTratamiento.sObservaciones.CellAttributes)>
<span id="el_PlanTratamiento_sObservaciones">
<span @Html.Raw(PlanTratamiento.sObservaciones.ViewAttributes)>
@Html.Raw(PlanTratamiento.sObservaciones.GetViewValue())</span>
</span>
</td>
	</tr>
} @* PlanTratamiento.sObservaciones.Visible (end) *@
</table>
@{ PlanTratamiento_View.CloseRecordset(); }
@if (PlanTratamiento_View.CurrentDetailTables.Contains("PlanTratamientoDetalle") && PlanTratamientoDetalle.DetailView) {
	if (!Empty(PlanTratamiento_View.CurrentDetailTable)) {
		<h4 class="ew-detail-caption">@Html.Raw(Language.TablePhrase("PlanTratamientoDetalle", "TblCaption"))</h4>
	}
		@await Html.PartialAsync("PlanTratamientoDetallegrid")
	View = this;
}
</form>
@PlanTratamiento_View.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!PlanTratamiento.IsExport()) {
<script>

// Write your table-specific startup script here
// document.write("page loaded");

</script>
}
