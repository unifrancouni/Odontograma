@{

	// Layout
	Layout = "_Layout";

	// View
	View = this;
	SetupLoginStatus(); // Setup login status
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	ValorCatalogo_View.Page_Render();

	// Check action result
	if (ValorCatalogo_View.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	#pragma warning disable 168

	// Local variables (Temp data)
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;

	#pragma warning restore 168

}
@if (!ValorCatalogo.IsExport()) {
<script>

// Form object
var CurrentPageID = ew.PAGE_ID = "view";
var fValorCatalogoview = currentForm = new ew.Form("fValorCatalogoview", "view");

// Form_CustomValidate event
fValorCatalogoview.Form_CustomValidate = function(fobj) { // DO NOT CHANGE THIS LINE!

	// Your custom validation code here, return false if invalid.
	return true;
}

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fValorCatalogoview.validateRequired = @ConvertToJson(Config.ClientValidate);

// Dynamic selection lists
fValorCatalogoview.lists["x_nCatalogoID"] = @Html.Raw(ValorCatalogo_View.nCatalogoID.Lookup.ToClientList());
fValorCatalogoview.lists["x_nCatalogoID"].options = @Html.Raw(ConvertToJson(ValorCatalogo_View.nCatalogoID.LookupOptions));
fValorCatalogoview.lists["x_nActivo"] = @Html.Raw(ValorCatalogo_View.nActivo.Lookup.ToClientList());
fValorCatalogoview.lists["x_nActivo"].options = @Html.Raw(ConvertToJson(ValorCatalogo_View.nActivo.Options(false))); // DN

// Form object for search
</script>
<script>

// Write your client script here, no need to add script tags.
</script>
}
@if (!ValorCatalogo.IsExport()) {
<div class="btn-toolbar ew-toolbar">
	@ValorCatalogo_View.ExportOptions.RenderBody()
	@ValorCatalogo_View.OtherOptions.RenderBody()
	<div class="clearfix"></div>
</div>
}
@ValorCatalogo_View.ShowPageHeader()
@ValorCatalogo_View.ShowMessages()
<form name="fValorCatalogoview" id="fValorCatalogoview" class="form-inline ew-form ew-view-form" method="post">
@if (ValorCatalogo_View.CheckToken) {
	@Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(ValorCatalogo_View.IsModal)">
<table class="table table-striped table-sm ew-view-table">
@if (ValorCatalogo.nCatalogoID.Visible) { @* ValorCatalogo.nCatalogoID.Visible (begin) *@
	<tr id="r_nCatalogoID">
		<td class="@ValorCatalogo_View.TableLeftColumnClass"><span id="elh_ValorCatalogo_nCatalogoID">@Html.Raw(ValorCatalogo.nCatalogoID.Caption)</span></td>
		<td data-name="nCatalogoID" @Html.Raw(ValorCatalogo.nCatalogoID.CellAttributes)>
<span id="el_ValorCatalogo_nCatalogoID">
<span @Html.Raw(ValorCatalogo.nCatalogoID.ViewAttributes)>
@Html.Raw(ValorCatalogo.nCatalogoID.GetViewValue())</span>
</span>
</td>
	</tr>
} @* ValorCatalogo.nCatalogoID.Visible (end) *@
@if (ValorCatalogo.nCodigo.Visible) { @* ValorCatalogo.nCodigo.Visible (begin) *@
	<tr id="r_nCodigo">
		<td class="@ValorCatalogo_View.TableLeftColumnClass"><span id="elh_ValorCatalogo_nCodigo">@Html.Raw(ValorCatalogo.nCodigo.Caption)</span></td>
		<td data-name="nCodigo" @Html.Raw(ValorCatalogo.nCodigo.CellAttributes)>
<span id="el_ValorCatalogo_nCodigo">
<span @Html.Raw(ValorCatalogo.nCodigo.ViewAttributes)>
@Html.Raw(ValorCatalogo.nCodigo.GetViewValue())</span>
</span>
</td>
	</tr>
} @* ValorCatalogo.nCodigo.Visible (end) *@
@if (ValorCatalogo.sDescripcion.Visible) { @* ValorCatalogo.sDescripcion.Visible (begin) *@
	<tr id="r_sDescripcion">
		<td class="@ValorCatalogo_View.TableLeftColumnClass"><span id="elh_ValorCatalogo_sDescripcion">@Html.Raw(ValorCatalogo.sDescripcion.Caption)</span></td>
		<td data-name="sDescripcion" @Html.Raw(ValorCatalogo.sDescripcion.CellAttributes)>
<span id="el_ValorCatalogo_sDescripcion">
<span @Html.Raw(ValorCatalogo.sDescripcion.ViewAttributes)>
@Html.Raw(ValorCatalogo.sDescripcion.GetViewValue())</span>
</span>
</td>
	</tr>
} @* ValorCatalogo.sDescripcion.Visible (end) *@
@if (ValorCatalogo.nActivo.Visible) { @* ValorCatalogo.nActivo.Visible (begin) *@
	<tr id="r_nActivo">
		<td class="@ValorCatalogo_View.TableLeftColumnClass"><span id="elh_ValorCatalogo_nActivo">@Html.Raw(ValorCatalogo.nActivo.Caption)</span></td>
		<td data-name="nActivo" @Html.Raw(ValorCatalogo.nActivo.CellAttributes)>
<span id="el_ValorCatalogo_nActivo">
<span @Html.Raw(ValorCatalogo.nActivo.ViewAttributes)>
@Html.Raw(ValorCatalogo.nActivo.GetViewValue())</span>
</span>
</td>
	</tr>
} @* ValorCatalogo.nActivo.Visible (end) *@
</table>
@{ ValorCatalogo_View.CloseRecordset(); }
</form>
@ValorCatalogo_View.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!ValorCatalogo.IsExport()) {
<script>

// Write your table-specific startup script here
// document.write("page loaded");

</script>
}
