@{

	// Layout
	Layout = "_Layout";

	// View
	View = this;
	SetupLoginStatus(); // Setup login status
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	Placagrama_View.Page_Render();

	// Check action result
	if (Placagrama_View.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	#pragma warning disable 168

	// Local variables (Temp data)
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;

	#pragma warning restore 168

}
@if (!Placagrama.IsExport()) {
<script>

// Form object
var CurrentPageID = ew.PAGE_ID = "view";
var fPlacagramaview = currentForm = new ew.Form("fPlacagramaview", "view");

// Form_CustomValidate event
fPlacagramaview.Form_CustomValidate = function(fobj) { // DO NOT CHANGE THIS LINE!

	// Your custom validation code here, return false if invalid.
	return true;
}

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fPlacagramaview.validateRequired = @ConvertToJson(Config.ClientValidate);

// Dynamic selection lists
fPlacagramaview.lists["x_nExpedienteID"] = @Html.Raw(Placagrama_View.nExpedienteID.Lookup.ToClientList());
fPlacagramaview.lists["x_nExpedienteID"].options = @Html.Raw(ConvertToJson(Placagrama_View.nExpedienteID.LookupOptions));
fPlacagramaview.lists["x_nEstadoID"] = @Html.Raw(Placagrama_View.nEstadoID.Lookup.ToClientList());
fPlacagramaview.lists["x_nEstadoID"].options = @Html.Raw(ConvertToJson(Placagrama_View.nEstadoID.LookupOptions));

// Form object for search
</script>
<script>

// Write your client script here, no need to add script tags.
</script>
}
@if (!Placagrama.IsExport()) {
<div class="btn-toolbar ew-toolbar">
	@Placagrama_View.ExportOptions.RenderBody()
	@Placagrama_View.OtherOptions.RenderBody()
	<div class="clearfix"></div>
</div>
}
@Placagrama_View.ShowPageHeader()
@Placagrama_View.ShowMessages()
<form name="fPlacagramaview" id="fPlacagramaview" class="form-inline ew-form ew-view-form" method="post">
@if (Placagrama_View.CheckToken) {
	@Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(Placagrama_View.IsModal)">
<table class="table table-striped table-sm ew-view-table">
@if (Placagrama.nExpedienteID.Visible) { @* Placagrama.nExpedienteID.Visible (begin) *@
	<tr id="r_nExpedienteID">
		<td class="@Placagrama_View.TableLeftColumnClass"><span id="elh_Placagrama_nExpedienteID">@Html.Raw(Placagrama.nExpedienteID.Caption)</span></td>
		<td data-name="nExpedienteID" @Html.Raw(Placagrama.nExpedienteID.CellAttributes)>
<span id="el_Placagrama_nExpedienteID">
<span @Html.Raw(Placagrama.nExpedienteID.ViewAttributes)>
@Html.Raw(Placagrama.nExpedienteID.GetViewValue())</span>
</span>
</td>
	</tr>
} @* Placagrama.nExpedienteID.Visible (end) *@
@if (Placagrama.sObservaciones.Visible) { @* Placagrama.sObservaciones.Visible (begin) *@
	<tr id="r_sObservaciones">
		<td class="@Placagrama_View.TableLeftColumnClass"><span id="elh_Placagrama_sObservaciones">@Html.Raw(Placagrama.sObservaciones.Caption)</span></td>
		<td data-name="sObservaciones" @Html.Raw(Placagrama.sObservaciones.CellAttributes)>
<span id="el_Placagrama_sObservaciones">
<span @Html.Raw(Placagrama.sObservaciones.ViewAttributes)>
@Html.Raw(Placagrama.sObservaciones.GetViewValue())</span>
</span>
</td>
	</tr>
} @* Placagrama.sObservaciones.Visible (end) *@
@if (Placagrama.dFechaPlacagrama.Visible) { @* Placagrama.dFechaPlacagrama.Visible (begin) *@
	<tr id="r_dFechaPlacagrama">
		<td class="@Placagrama_View.TableLeftColumnClass"><span id="elh_Placagrama_dFechaPlacagrama">@Html.Raw(Placagrama.dFechaPlacagrama.Caption)</span></td>
		<td data-name="dFechaPlacagrama" @Html.Raw(Placagrama.dFechaPlacagrama.CellAttributes)>
<span id="el_Placagrama_dFechaPlacagrama">
<span @Html.Raw(Placagrama.dFechaPlacagrama.ViewAttributes)>
@Html.Raw(Placagrama.dFechaPlacagrama.GetViewValue())</span>
</span>
</td>
	</tr>
} @* Placagrama.dFechaPlacagrama.Visible (end) *@
@if (Placagrama.nEstadoID.Visible) { @* Placagrama.nEstadoID.Visible (begin) *@
	<tr id="r_nEstadoID">
		<td class="@Placagrama_View.TableLeftColumnClass"><span id="elh_Placagrama_nEstadoID">@Html.Raw(Placagrama.nEstadoID.Caption)</span></td>
		<td data-name="nEstadoID" @Html.Raw(Placagrama.nEstadoID.CellAttributes)>
<span id="el_Placagrama_nEstadoID">
<span @Html.Raw(Placagrama.nEstadoID.ViewAttributes)>
@Html.Raw(Placagrama.nEstadoID.GetViewValue())</span>
</span>
</td>
	</tr>
} @* Placagrama.nEstadoID.Visible (end) *@
@if (Placagrama.dFechaCreacion.Visible) { @* Placagrama.dFechaCreacion.Visible (begin) *@
	<tr id="r_dFechaCreacion">
		<td class="@Placagrama_View.TableLeftColumnClass"><span id="elh_Placagrama_dFechaCreacion">@Html.Raw(Placagrama.dFechaCreacion.Caption)</span></td>
		<td data-name="dFechaCreacion" @Html.Raw(Placagrama.dFechaCreacion.CellAttributes)>
<span id="el_Placagrama_dFechaCreacion">
<span @Html.Raw(Placagrama.dFechaCreacion.ViewAttributes)>
@Html.Raw(Placagrama.dFechaCreacion.GetViewValue())</span>
</span>
</td>
	</tr>
} @* Placagrama.dFechaCreacion.Visible (end) *@
</table>
@{ Placagrama_View.CloseRecordset(); }
</form>
@Placagrama_View.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!Placagrama.IsExport()) {
<script>

// Write your table-specific startup script here
// document.write("page loaded");

</script>
}
