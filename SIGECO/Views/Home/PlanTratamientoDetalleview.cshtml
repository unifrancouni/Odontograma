@{

	// Layout
	Layout = "_Layout";

	// View
	View = this;
	SetupLoginStatus(); // Setup login status
	SetClientVar("login", LoginStatus);

	// Global Page Rendering event
	Page_Rendering();

	// Page Render event
	PlanTratamientoDetalle_View.Page_Render();

	// Check action result
	if (PlanTratamientoDetalle_View.ActionResult is EmptyResult) { // Terminate page
		return;
	}

	#pragma warning disable 168

	// Local variables (Temp data)
	string sqlWrk, filterWrk, whereWrk, curVal;
	List<Dictionary<string, object>> rswrk;
	string[] arWrk;
	List<object> listWrk;
	Func<string> lookupFilter;

	#pragma warning restore 168

}
@if (!PlanTratamientoDetalle.IsExport()) {
<script>

// Form object
var CurrentPageID = ew.PAGE_ID = "view";
var fPlanTratamientoDetalleview = currentForm = new ew.Form("fPlanTratamientoDetalleview", "view");

// Form_CustomValidate event
fPlanTratamientoDetalleview.Form_CustomValidate = function(fobj) { // DO NOT CHANGE THIS LINE!

	// Your custom validation code here, return false if invalid.
	return true;
}

// Use JavaScript validation or not remove PROJ.ProgramLanguage
fPlanTratamientoDetalleview.validateRequired = @ConvertToJson(Config.ClientValidate);

// Dynamic selection lists
fPlanTratamientoDetalleview.lists["x_nTratamientoID"] = @Html.Raw(PlanTratamientoDetalle_View.nTratamientoID.Lookup.ToClientList());
fPlanTratamientoDetalleview.lists["x_nTratamientoID"].options = @Html.Raw(ConvertToJson(PlanTratamientoDetalle_View.nTratamientoID.LookupOptions));
fPlanTratamientoDetalleview.lists["x_nMonedaID"] = @Html.Raw(PlanTratamientoDetalle_View.nMonedaID.Lookup.ToClientList());
fPlanTratamientoDetalleview.lists["x_nMonedaID"].options = @Html.Raw(ConvertToJson(PlanTratamientoDetalle_View.nMonedaID.LookupOptions));

// Form object for search
</script>
<script>

// Write your client script here, no need to add script tags.
</script>
}
@if (!PlanTratamientoDetalle.IsExport()) {
<div class="btn-toolbar ew-toolbar">
	@PlanTratamientoDetalle_View.ExportOptions.RenderBody()
	@PlanTratamientoDetalle_View.OtherOptions.RenderBody()
	<div class="clearfix"></div>
</div>
}
@PlanTratamientoDetalle_View.ShowPageHeader()
@PlanTratamientoDetalle_View.ShowMessages()
<form name="fPlanTratamientoDetalleview" id="fPlanTratamientoDetalleview" class="form-inline ew-form ew-view-form" method="post">
@if (PlanTratamientoDetalle_View.CheckToken) {
	@Html.AntiForgeryToken()
}
<input type="hidden" name="modal" value="@ConvertToInt(PlanTratamientoDetalle_View.IsModal)">
<table class="table table-striped table-sm ew-view-table">
@if (PlanTratamientoDetalle.nTratamientoID.Visible) { @* PlanTratamientoDetalle.nTratamientoID.Visible (begin) *@
	<tr id="r_nTratamientoID">
		<td class="@PlanTratamientoDetalle_View.TableLeftColumnClass"><span id="elh_PlanTratamientoDetalle_nTratamientoID">@Html.Raw(PlanTratamientoDetalle.nTratamientoID.Caption)</span></td>
		<td data-name="nTratamientoID" @Html.Raw(PlanTratamientoDetalle.nTratamientoID.CellAttributes)>
<span id="el_PlanTratamientoDetalle_nTratamientoID">
<span @Html.Raw(PlanTratamientoDetalle.nTratamientoID.ViewAttributes)>
@Html.Raw(PlanTratamientoDetalle.nTratamientoID.GetViewValue())</span>
</span>
</td>
	</tr>
} @* PlanTratamientoDetalle.nTratamientoID.Visible (end) *@
@if (PlanTratamientoDetalle.dFechaTratamiento.Visible) { @* PlanTratamientoDetalle.dFechaTratamiento.Visible (begin) *@
	<tr id="r_dFechaTratamiento">
		<td class="@PlanTratamientoDetalle_View.TableLeftColumnClass"><span id="elh_PlanTratamientoDetalle_dFechaTratamiento">@Html.Raw(PlanTratamientoDetalle.dFechaTratamiento.Caption)</span></td>
		<td data-name="dFechaTratamiento" @Html.Raw(PlanTratamientoDetalle.dFechaTratamiento.CellAttributes)>
<span id="el_PlanTratamientoDetalle_dFechaTratamiento">
<span @Html.Raw(PlanTratamientoDetalle.dFechaTratamiento.ViewAttributes)>
@Html.Raw(PlanTratamientoDetalle.dFechaTratamiento.GetViewValue())</span>
</span>
</td>
	</tr>
} @* PlanTratamientoDetalle.dFechaTratamiento.Visible (end) *@
@if (PlanTratamientoDetalle.nCosto.Visible) { @* PlanTratamientoDetalle.nCosto.Visible (begin) *@
	<tr id="r_nCosto">
		<td class="@PlanTratamientoDetalle_View.TableLeftColumnClass"><span id="elh_PlanTratamientoDetalle_nCosto">@Html.Raw(PlanTratamientoDetalle.nCosto.Caption)</span></td>
		<td data-name="nCosto" @Html.Raw(PlanTratamientoDetalle.nCosto.CellAttributes)>
<span id="el_PlanTratamientoDetalle_nCosto">
<span @Html.Raw(PlanTratamientoDetalle.nCosto.ViewAttributes)>
@Html.Raw(PlanTratamientoDetalle.nCosto.GetViewValue())</span>
</span>
</td>
	</tr>
} @* PlanTratamientoDetalle.nCosto.Visible (end) *@
@if (PlanTratamientoDetalle.nMonedaID.Visible) { @* PlanTratamientoDetalle.nMonedaID.Visible (begin) *@
	<tr id="r_nMonedaID">
		<td class="@PlanTratamientoDetalle_View.TableLeftColumnClass"><span id="elh_PlanTratamientoDetalle_nMonedaID">@Html.Raw(PlanTratamientoDetalle.nMonedaID.Caption)</span></td>
		<td data-name="nMonedaID" @Html.Raw(PlanTratamientoDetalle.nMonedaID.CellAttributes)>
<span id="el_PlanTratamientoDetalle_nMonedaID">
<span @Html.Raw(PlanTratamientoDetalle.nMonedaID.ViewAttributes)>
@Html.Raw(PlanTratamientoDetalle.nMonedaID.GetViewValue())</span>
</span>
</td>
	</tr>
} @* PlanTratamientoDetalle.nMonedaID.Visible (end) *@
</table>
@{ PlanTratamientoDetalle_View.CloseRecordset(); }
</form>
@PlanTratamientoDetalle_View.ShowPageFooter()
@ShowDebugMessage()
@ElapsedTime()
@if (!PlanTratamientoDetalle.IsExport()) {
<script>

// Write your table-specific startup script here
// document.write("page loaded");

</script>
}
